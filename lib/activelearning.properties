# activelearning.properties
# Copyright (C) 2008 Sofus A. Macskassy
#
# Part of the open-source Network Learning Toolkit
# http://netkit-srl.sourceforge.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# $Id$
#
# ================================================================================
#
# Active Learning strategies
#
# Add your new active learning picking strategies in this file.
#
# Required lines:
#     <name>.class=[fully specified class name]
#

# ==============================
# Pick most uncertain
# ==============================
uncertainty.class=netkit.classifiers.active.UncertaintyLabeling

# ==============================
# Pick at random
# ==============================
random.class=netkit.classifiers.active.RandomLabeling

# ==============================
# Pick at random
# ==============================
greedytruth.class=netkit.classifiers.active.GreedyTruth

# ==============================
# Pick based on minimizing empirical risk
# ==============================
erm.class=netkit.classifiers.active.EmpiricalRiskMinimization

# ==============================
# Pick based on closeness centrality measures
# ==============================
closeness.class=netkit.classifiers.active.GraphCentralityLabeling
closeness.metric=Closeness

# ==============================
# Pick based on weighted closeness centrality measures
# ==============================
weightedcloseness.class=netkit.classifiers.active.GraphCentralityLabeling
weightedcloseness.metric=WeightedCloseness

# ==============================
# Pick based on betweenness centrality measures
# ==============================
betweenness.class=netkit.classifiers.active.GraphCentralityLabeling
betweenness.metric=Betweenness

# ==============================
# Pick based on betweenness centrality measures
# ==============================
clusterbetweenness.class=netkit.classifiers.active.GraphCentralityLabeling
clusterbetweenness.metric=Betweenness
clusterbetweenness.cluster=true

# ==============================
# Pick based on weighted betweenness centrality measures
# ==============================
weightedbetweenness.class=netkit.classifiers.active.GraphCentralityLabeling
weightedbetweenness.metric=WeightedBetweenness

# ==============================
# Pick based on weighted betweenness centrality measures
# ==============================
clusterweightedbetweenness.class=netkit.classifiers.active.GraphCentralityLabeling
clusterweightedbetweenness.metric=WeightedBetweenness
clusterweightedbetweenness.cluster=true

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clustercloseness.class=netkit.classifiers.active.GraphCentralityLabeling
clustercloseness.metric=ClusterCloseness

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterweightedcloseness.class=netkit.classifiers.active.GraphCentralityLabeling
clusterweightedcloseness.metric=ClusterWeightedCloseness

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterclosenesssize.class=netkit.classifiers.active.GraphCentralityLabeling
clusterclosenesssize.metric=ClusterCloseness
clusterclosenesssize.clusterrank=ClusterSizeRank

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterweightedclosenesssize.class=netkit.classifiers.active.GraphCentralityLabeling
clusterweightedclosenesssize.metric=ClusterWeightedCloseness
clusterweightedclosenesssize.clusterrank=ClusterSizeRank

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterclosenesslbldist.class=netkit.classifiers.active.GraphCentralityLabeling
clusterclosenesslbldist.metric=ClusterCloseness
clusterclosenesslbldist.clusterrank=LabelWeightedCloseness

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterweightedclosenesslbldist.class=netkit.classifiers.active.GraphCentralityLabeling
clusterweightedclosenesslbldist.metric=ClusterWeightedCloseness
clusterweightedclosenesslbldist.clusterrank=LabelWeightedCloseness


# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterclosenesserm.class=netkit.classifiers.active.GraphCentralityLabeling
clusterclosenesserm.metric=ClusterCloseness
clusterclosenesserm.clusterrank=ERMRank

# ==============================
# Pick based on cluster-closeness centrality measures
# ==============================
clusterweightedclosenesserm.class=netkit.classifiers.active.GraphCentralityLabeling
clusterweightedclosenesserm.metric=ClusterWeightedCloseness
clusterweightedclosenesserm.clusterrank=ERMRank

comparator.class=netkit.classifiers.active.ComparatorLabeler

ermhybrid.class=netkit.classifiers.active.ERMHybrid

ermhybrid1pct.class=netkit.classifiers.active.ERMHybrid
ermhybrid1pct.topk=0.01

ermhybridvote.class=netkit.classifiers.active.ERMHybrid
ermhybridvote.vote=true
ermhybridvote.topk=5
ermhybridvote.nodespercluster=3

ermhybrid3.class=netkit.classifiers.active.ERMHybrid
ermhybrid3.topk=5
ermhybrid5nc.nodespercluster=3

ermhybrid5nc.class=netkit.classifiers.active.ERMHybrid
ermhybrid5nc.cluster=false
ermhybrid5nc.topk=5
